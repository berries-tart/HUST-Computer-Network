[General]
network = CampusNetwork  # 指定仿真网络的名称为 CampusNetwork，即本次仿真所使用的网络模型
sim-time-limit = 1000s  # 设置仿真时间的上限为 1000 秒，仿真将在达到此时间后自动停止
output-scalar-file = results.sca  # 指定仿真结果的标量数据输出文件为 results.sca，该文件将记录仿真过程中的各种统计数据
output-scalar-precision = 3  # 设置标量数据输出文件中的数值精度为 3 位小数

**.app[0].**.scalar-recording = true  # 启用应用程序的标量数据记录功能，记录应用程序的统计数据
#**.scalar-recording = false  # 禁用其他模块的标量数据记录功能，以减少输出文件的大小
#**.vector-recording = false  # 禁用向量数据记录功能，以减少输出文件的大小

# IP 设置
**.rsvp.procDelay = 1us  # 设置 RSVP（资源预留协议）的处理延迟为 1 微秒

# 传输层配置
**.tcp.typename = "Tcp"  # 指定 TCP 协议的实现类型为 "Tcp"
**.tcp.mss = 1024  # 设置 TCP 的最大报文段大小（MSS）为 1024 字节
**.tcp.advertisedWindow = 14336  # 设置 TCP 的通告窗口大小为 14336 字节
**.tcp.tcpAlgorithmClass = "TcpReno"  # 指定 TCP 拥塞控制算法为 "TcpReno"，即 Reno 算法

# 网卡配置
**.eth[*].mac.queue.typename = "EtherQosQueue"  # 指定以太网 MAC 层的队列类型为 "EtherQosQueue"，支持 QoS（服务质量）
**.eth[*].mac.queue.dataQueue.typename = "DropTailQueue"  # 指定数据队列的类型为 "DropTailQueue"，即尾部丢弃队列
**.eth[*].mac.queue.dataQueue.packetCapacity = 100  # 设置数据队列的容量为 100 个数据包

# OSPF 配置文件
**.ospfConfig = xmldoc("RouteConfig.xml")  # 指定 OSPF 配置文件为 RouteConfig.xml，用于配置 OSPF 路由协议

# BGP 配置
**.bgpConfig = xmldoc("ASConfig.xml")  # 指定 BGP 配置文件为 ASConfig.xml，用于配置 BGP 路由协议
**.bgp.redistributeOspf = "O IA E2"  # 配置 BGP 重分发 OSPF 路由的类型
# O：表示常规的 OSPF 路由（Internal OSPF Routes）
# IA：表示 OSPF 的内部区域路由（Internal Area Routes），通常用于在 OSPF 中跨区域路由
# E2：表示外部类型 2 的 OSPF 路由（External Type 2 Routes）。在 OSPF 中，外部路由分为两种类型：E1 和 E2，E2 路由不考虑汇总的费用，适用于跨越多个自治系统的情况

# UDPApp 配置
**.HA*.numApps = 1  # 为 HA 系列主机（如 HA11、HA21 等）配置 1 个应用程序
**.HB*.numApps = 1  # 为 HB 系列主机（如 HB11、HB21 等）配置 1 个应用程序
**.HC*.numApps = 1  # 为 HC 系列主机（如 HC11、HC21 等）配置 1 个应用程序
**.app[0].messageLength = 32 bytes  # 设置应用程序发送的消息长度为 32 字节
**.app[0].sendInterval = 2s  # 设置应用程序发送消息的时间间隔为 2 秒
**.app[0].localPort = 1234  # 设置应用程序的本地端口号为 1234
**.app[0].destPort = 1234  # 设置应用程序的目标端口号为 1234

# 负责发包的应用程序配置
**.HA11.app[*].typename = "UdpBasicApp"  # 为 HA11 主机配置应用程序类型为 "UdpBasicApp"，用于发送 UDP 数据包
**.HA11.app[0].destAddresses = "192.170.1.2"  # 设置 HA11 发送数据包的目标地址为 192.170.1.2
**.HA21.app[*].typename = "UdpBasicApp"  # 为 HA21 主机配置应用程序类型为 "UdpBasicApp"，用于发送 UDP 数据包
**.HA21.app[0].destAddresses = "192.169.1.2"  # 设置 HA21 发送数据包的目标地址为 192.169.1.2，负责学院内通信
**.HA31.app[*].typename = "UdpBasicApp"  # 为 HA31 主机配置应用程序类型为 "UdpBasicApp"，用于发送 UDP 数据包
**.HA31.app[0].destAddresses = "192.172.1.2"  # 设置 HA31 发送数据包的目标地址为 192.172.1.2
**.HA41.app[*].typename = "UdpBasicApp"  # 为 HA41 主机配置应用程序类型为 "UdpBasicApp"，用于发送 UDP 数据包
**.HA41.app[0].destAddresses = "192.172.1.2"  # 设置 HA41 发送数据包的目标地址为 192.172.1.2
**.HA51.app[*].typename = "UdpBasicApp"  # 为 HA51 主机配置应用程序类型为 "UdpBasicApp"，用于发送 UDP 数据包
**.HA51.app[0].destAddresses = "192.172.1.2"  # 设置 HA51 发送数据包的目标地址为 192.172.1.2
**.HB11.app[*].typename = "UdpBasicApp"  # 为 HB11 主机配置应用程序类型为 "UdpBasicApp"，用于发送 UDP 数据包
**.HB11.app[0].destAddresses = "192.169.1.2"  # 设置 HB11 发送数据包的目标地址为 192.169.1.2
**.HB21.app[*].typename = "UdpBasicApp"  # 为 HB21 主机配置应用程序类型为 "UdpBasicApp"，用于发送 UDP 数据包
**.HB21.app[0].destAddresses = "192.168.1.2"  # 设置 HB21 发送数据包的目标地址为 192.168.1.2
**.HB31.app[*].typename = "UdpBasicApp"  # 为 HB31 主机配置应用程序类型为 "UdpBasicApp"，用于发送 UDP 数据包
**.HB31.app[0].destAddresses = "192.168.1.2"  # 设置 HB31 发送数据包的目标地址为 192.168.1.2
**.HC11.app[*].typename = "UdpBasicApp"  # 为 HC11 主机配置应用程序类型为 "UdpBasicApp"，用于发送 UDP 数据包
**.HC11.app[0].destAddresses = "192.181.1.2"  # 设置 HC11 发送数据包的目标地址为 192.181.1.2

# 负责收包的应用程序配置
**.HA12.app[*].typename = "UdpSink"  # 为 HA12 主机配置应用程序类型为 "UdpSink"，用于接收 UDP 数据包
**.HA22.app[*].typename = "UdpSink"  # 为 HA22 主机配置应用程序类型为 "UdpSink"，用于接收 UDP 数据包
**.HA32.app[*].typename = "UdpSink"  # 为 HA32 主机配置应用程序类型为 "UdpSink"，用于接收 UDP 数据包
**.HA42.app[*].typename = "UdpSink"  # 为 HA42 主机配置应用程序类型为 "UdpSink"，用于接收 UDP 数据包
**.HA52.app[*].typename = "UdpSink"  # 为 HA52 主机配置应用程序类型为 "UdpSink"，用于接收 UDP 数据包
**.HB12.app[*].typename = "UdpSink"  # 为 HB12 主机配置应用程序类型为 "UdpSink"，用于接收 UDP 数据包
**.HB22.app[*].typename = "UdpSink"  # 为 HB22 主机配置应用程序类型为 "UdpSink"，用于接收 UDP 数据包
**.HB32.app[*].typename = "UdpSink"  # 为 HB32 主机配置应用程序类型为 "UdpSink"，用于接收 UDP 数据包
**.HC12.app[*].typename = "UdpSink"  # 为 HC12 主机配置应用程序类型为 "UdpSink"，用于接收 UDP 数据包

# 可视化配置
*.visualizer.interfaceTableVisualizer.displayInterfaceTables = true  # 启用接口表的可视化显示，方便查看网络设备的接口信息